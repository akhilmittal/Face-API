{"version":3,"file":"modal-window.js","sourceRoot":"","sources":["../../src/modal/modal-window.ts"],"names":[],"mappings":"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","sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  Inject,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  AfterViewInit,\n  OnDestroy\n} from '@angular/core';\n\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '(keyup.esc)': 'escKey($event)',\n    '(click)': 'backdropClick($event)'\n  },\n  template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _document: any;\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(@Inject(DOCUMENT) document, private _elRef: ElementRef, private _renderer: Renderer2) {\n    this._document = document;\n  }\n\n  backdropClick($event): void {\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  escKey($event): void {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() {\n    this._elWithFocus = this._document.activeElement;\n    this._renderer.addClass(this._document.body, 'modal-open');\n  }\n\n  ngAfterViewInit() {\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\n      this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    elementToFocus['focus'].apply(elementToFocus, []);\n\n    this._elWithFocus = null;\n    this._renderer.removeClass(body, 'modal-open');\n  }\n}\n"]}