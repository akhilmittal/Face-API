{"version":3,"file":"toast.component.js","sourceRoot":"","sources":["../../src/toast.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,gBAAgB,EAAE,YAAY,EACvE,wBAAwB,EAAE,iBAAiB,EAC9C,MAAM,eAAe,CAAC;AACvB,OAAO,EAAC,YAAY,EAAW,MAAM,2BAA2B,CAAC;AAEjE,OAAO,EAAC,cAAc,EAAC,MAAM,kBAAkB,CAAC;;IAkC5C,wBACU,SAAuB,EACvB,wBAAkD,EAClD,iBAAoC;QAFpC,cAAS,GAAT,SAAS,CAAc;QACvB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,sBAAiB,GAAjB,iBAAiB,CAAmB;8BARtB,cAAc;0BAGlB,IAAI,YAAY,EAAE;KAMlC;IAEJ,iCAAQ,GAAR;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACrF;KACJ;IAED,wCAAe,GAAf;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9D,IAAM,SAAS,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACzF,IAAM,iBAAiB,GAAQ,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACrH,iBAAiB,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAC9C,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;SAC1C;KACJ;IAED,8BAAK,GAAL,UAAM,KAAiB,EAAE,KAAY;QACjC,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACjB,KAAK,EAAG,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAC;SAC/C,CAAC,CAAC;KACN;;gBA1DJ,SAAS,SAAC;oBACP,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,wtBAYC;iBACd;;;;gBAnBO,YAAY;gBAFhB,wBAAwB;gBAAE,iBAAiB;;;0BAyB1C,KAAK;8BACL,KAAK;+BACL,KAAK;iCACL,KAAK;kCACL,SAAS,SAAC,eAAe,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE;+BAMrD,MAAM;;yBApCX;;SAwBa,cAAc","sourcesContent":["import {Component, Input, Output, ViewChild, ViewContainerRef, EventEmitter,\r\n    ComponentFactoryResolver, ChangeDetectorRef, OnInit, AfterViewInit\r\n} from '@angular/core';\r\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\r\nimport {Toast} from './toast';\r\nimport {BodyOutputType} from './bodyOutputType';\r\n\r\n@Component({\r\n    selector: '[toastComp]',\r\n    template: `\r\n        <i class=\"toaster-icon\" [ngClass]=\"iconClass\"></i>\r\n        <div class=\"toast-content\">\r\n            <div [ngClass]=\"titleClass\">{{toast.title}}</div>\r\n            <div [ngClass]=\"messageClass\" [ngSwitch]=\"toast.bodyOutputType\">\r\n                <div *ngSwitchCase=\"bodyOutputType.Component\" #componentBody></div>\r\n                <div *ngSwitchCase=\"bodyOutputType.TrustedHtml\" [innerHTML]=\"toast.body\"></div>\r\n                <div *ngSwitchCase=\"bodyOutputType.Default\">{{toast.body}}</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"toast-close-button\" *ngIf=\"toast.showCloseButton\" (click)=\"click($event, toast)\"\r\n            [innerHTML]=\"safeCloseHtml\">\r\n        </div>`\r\n})\r\n\r\nexport class ToastComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input() toast: Toast;\r\n    @Input() iconClass: string;\r\n    @Input() titleClass: string;\r\n    @Input() messageClass: string;\r\n    @ViewChild('componentBody', { read: ViewContainerRef }) componentBody: ViewContainerRef;\r\n\r\n    safeCloseHtml: SafeHtml;\r\n\r\n    public bodyOutputType = BodyOutputType;\r\n\r\n    @Output()\r\n    public clickEvent = new EventEmitter();\r\n\r\n    constructor(\r\n      private sanitizer: DomSanitizer,\r\n      private componentFactoryResolver: ComponentFactoryResolver,\r\n      private changeDetectorRef: ChangeDetectorRef\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        if (this.toast.closeHtml) {\r\n            this.safeCloseHtml = this.sanitizer.bypassSecurityTrustHtml(this.toast.closeHtml);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.toast.bodyOutputType === this.bodyOutputType.Component) {\r\n            const component = this.componentFactoryResolver.resolveComponentFactory(this.toast.body);\r\n            const componentInstance: any = this.componentBody.createComponent(component, undefined, this.componentBody.injector);\r\n            componentInstance.instance.toast = this.toast;\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n\r\n    click(event: MouseEvent, toast: Toast) {\r\n        event.stopPropagation();\r\n        this.clickEvent.emit({\r\n            value : { toast: toast, isCloseButton: true}\r\n        });\r\n    }\r\n}\r\n"]}