{"version":3,"file":"toaster-config.js","sourceRoot":"","sources":["../../src/toaster-config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,cAAc,EAAC,MAAM,kBAAkB,CAAC;AA2BhD,IAAA;IAwBI,uBAAY,eAAgC;QACxC,eAAe,GAAG,eAAe,IAAI,EAAE,CAAC;QACxC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,KAAK,IAAI,IAAI,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/F,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC;QACzG,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,SAAS,IAAI,mEAAmE,CAAC;QAClH,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;QAC5F,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;QAChF,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC,WAAW,IAAI;YAC9C,KAAK,EAAE,aAAa;YACpB,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,YAAY;YAClB,OAAO,EAAE,eAAe;YACxB,OAAO,EAAE,eAAe;SAC3B,CAAC;QACF,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC,WAAW,IAAI;YAC9C,KAAK,EAAE,YAAY;YACnB,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,cAAc;YACvB,OAAO,EAAE,cAAc;SAC1B,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC,cAAc,IAAI,cAAc,CAAC,OAAO,CAAC;QAC/E,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC,YAAY,IAAI,sBAAsB,CAAC;QAC3E,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC,gBAAgB,IAAI,YAAY,CAAC;QACzE,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC,aAAa,IAAI,iBAAiB,CAAC;QACxE,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC,UAAU,IAAI,aAAa,CAAC;QAC9D,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC,YAAY,IAAI,eAAe,CAAC;QACpE,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,SAAS,IAAI,EAAE,CAAC;QACjD,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,iBAAiB,IAAI,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/G,IAAI,CAAC,kBAAkB,GAAG,eAAe,CAAC,kBAAkB,IAAI,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC,CAAC,KAAK,CAAC;QAClH,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC;KAC9G;wBAnFL;IAoFC,CAAA;AAzDD,yBAyDC","sourcesContent":["import {BodyOutputType} from './bodyOutputType';\r\n\r\nexport interface IToasterConfig {\r\n    limit?: number|null;\r\n    tapToDismiss?: boolean;\r\n    showCloseButton?: boolean|{ [key: string]: boolean };\r\n    closeHtml?: string;\r\n    newestOnTop?: boolean;\r\n    timeout?: number|{ [key: string]: number };\r\n    typeClasses?: { [key: string]: string };\r\n    iconClasses?: { [key: string]: string };\r\n    bodyOutputType?: BodyOutputType;\r\n    bodyTemplate?: string;\r\n    defaultTypeClass?: string;\r\n    // Options (see CSS):\r\n    // 'toast-top-full-width', 'toast-bottom-full-width', 'toast-center',\r\n    // 'toast-top-left', 'toast-top-center', 'toast-top-right',\r\n    // 'toast-bottom-left', 'toast-bottom-center', 'toast-bottom-right',\r\n    positionClass?: string;\r\n    titleClass?: string;\r\n    messageClass?: string;\r\n    animation?: string;\r\n    preventDuplicates?: boolean;\r\n    mouseoverTimerStop?: boolean;\r\n    toastContainerId?: number|null;\r\n}\r\n\r\nexport class ToasterConfig implements IToasterConfig {\r\n    limit?: number|null;\r\n    tapToDismiss: boolean;\r\n    showCloseButton: boolean|{ [key: string]: boolean };\r\n    closeHtml: string;\r\n    newestOnTop: boolean;\r\n    timeout: number|{ [key: string]: number };\r\n    typeClasses: { [key: string]: string };\r\n    iconClasses: { [key: string]: string };\r\n    bodyOutputType: BodyOutputType;\r\n    bodyTemplate: string;\r\n    defaultTypeClass: string;\r\n    // Options (see CSS):\r\n    // 'toast-top-full-width', 'toast-bottom-full-width', 'toast-center',\r\n    // 'toast-top-left', 'toast-top-center', 'toast-top-right',\r\n    // 'toast-bottom-left', 'toast-bottom-center', 'toast-bottom-right',\r\n    positionClass: string;\r\n    titleClass: string;\r\n    messageClass: string;\r\n    animation: string;\r\n    preventDuplicates: boolean;\r\n    mouseoverTimerStop: boolean;\r\n    toastContainerId?: number|null;\r\n\r\n    constructor(configOverrides?: IToasterConfig) {\r\n        configOverrides = configOverrides || {};\r\n        this.limit = configOverrides.limit || null;\r\n        this.tapToDismiss = configOverrides.tapToDismiss != null ? configOverrides.tapToDismiss : true;\r\n        this.showCloseButton = configOverrides.showCloseButton != null ? configOverrides.showCloseButton : false;\r\n        this.closeHtml = configOverrides.closeHtml || '<button class=\"toast-close-button\" type=\"button\">&times;</button>';\r\n        this.newestOnTop = configOverrides.newestOnTop != null ? configOverrides.newestOnTop : true;\r\n        this.timeout = configOverrides.timeout != null ? configOverrides.timeout : 5000;\r\n        this.typeClasses = configOverrides.typeClasses || {\r\n            error: 'toast-error',\r\n            info: 'toast-info',\r\n            wait: 'toast-wait',\r\n            success: 'toast-success',\r\n            warning: 'toast-warning'\r\n        };\r\n        this.iconClasses = configOverrides.iconClasses || {\r\n            error: 'icon-error',\r\n            info: 'icon-info',\r\n            wait: 'icon-wait',\r\n            success: 'icon-success',\r\n            warning: 'icon-warning'\r\n        };\r\n        this.bodyOutputType = configOverrides.bodyOutputType || BodyOutputType.Default;\r\n        this.bodyTemplate = configOverrides.bodyTemplate || 'toasterBodyTmpl.html';\r\n        this.defaultTypeClass = configOverrides.defaultTypeClass || 'toast-info';\r\n        this.positionClass = configOverrides.positionClass || 'toast-top-right';\r\n        this.titleClass = configOverrides.titleClass || 'toast-title';\r\n        this.messageClass = configOverrides.messageClass || 'toast-message';\r\n        this.animation = configOverrides.animation || '';\r\n        this.preventDuplicates = configOverrides.preventDuplicates != null ? configOverrides.preventDuplicates : false;\r\n        this.mouseoverTimerStop = configOverrides.mouseoverTimerStop != null ? configOverrides.mouseoverTimerStop : false;\r\n        this.toastContainerId = configOverrides.toastContainerId != null ? configOverrides.toastContainerId : null;\r\n    }\r\n}\r\n"]}